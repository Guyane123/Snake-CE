	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -6
	call	__frameset
	ld	hl, 0
	ld	de, 120
	ld	(ix - 3), de
	ld	de, 106
	ld	(ix - 6), de
	push	hl
	call	_time
	pop	de
	push	hl
	call	_srand
	pop	hl
	xor	a, a
	ld	(_buffer1), a
	ld	hl, _buffer1
	push	hl
	pop	de
	inc	de
	ld	iy, 153599
	lea	bc, iy
	ldir
	ld	(_buffer2), a
	ld	hl, _buffer2
	push	hl
	pop	de
	inc	de
	lea	bc, iy
	ldir
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	call	_start_draw
BB0_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB0_1
	ld	hl, (_activeBuffer)
	ld	(hl), 0
	push	hl
	pop	iy
	inc	iy
	ld	bc, 153599
	lea	de, iy
	ldir
	ld	hl, _buffer2
	ld	(_activeBuffer), hl
	ld	a, 1
	ld	(_isGame), a
BB0_3:
	or	a, a
	jp	z, BB0_32
	call	_os_GetCSC
	cp	a, 4
	jr	nz, BB0_8
	ld	a, (_playerDirection)
	cp	a, 100
	jr	z, BB0_7
	ld	a, 117
	ld	(_playerDirection), a
BB0_7:
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
BB0_8:
	call	_os_GetCSC
	cp	a, 3
	jr	nz, BB0_12
	ld	a, (_playerDirection)
	cp	a, 108
	jr	z, BB0_11
	ld	a, 114
	ld	(_playerDirection), a
BB0_11:
	ld	hl, (ix - 6)
	inc	hl
	ld	(ix - 6), hl
BB0_12:
	call	_os_GetCSC
	cp	a, 1
	jr	nz, BB0_16
	ld	a, (_playerDirection)
	cp	a, 117
	jr	z, BB0_15
	ld	a, 100
	ld	(_playerDirection), a
BB0_15:
	ld	hl, (ix - 3)
	dec	hl
	ld	(ix - 3), hl
BB0_16:
	call	_os_GetCSC
	ld	l, a
	ld	a, (_playerDirection)
	ld	e, a
	ld	a, l
	cp	a, 2
	jr	nz, BB0_20
	ld	a, e
	cp	a, 114
	ld	e, 114
	ld	iy, (ix - 6)
	jr	z, BB0_19
	ld	a, 108
	ld	(_playerDirection), a
	ld	e, a
BB0_19:
	dec	iy
	jr	BB0_21
BB0_20:
	ld	iy, (ix - 6)
BB0_21:
	ld	a, e
	rlc	a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	c, e
	push	bc
	pop	hl
	ld	de, 100
	or	a, a
	sbc	hl, de
	jr	nz, BB0_23
	ld	de, (ix - 3)
	dec	de
	jr	BB0_28
BB0_23:
	push	bc
	pop	hl
	ld	de, 108
	or	a, a
	sbc	hl, de
	jr	nz, BB0_25
	dec	iy
	jr	BB0_27
BB0_25:
	push	bc
	pop	hl
	ld	de, 114
	or	a, a
	sbc	hl, de
	jr	nz, BB0_30
	inc	iy
BB0_27:
	ld	de, (ix - 3)
BB0_28:
	ld	hl, 1
	push	hl
	ld	(ix - 3), de
	push	de
	ld	(ix - 6), iy
	push	iy
	call	_render
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_activeBuffer)
	ld	(hl), 0
	push	hl
	pop	iy
	inc	iy
	lea	de, iy
	ld	bc, 153599
	ldir
	call	_os_GetCSC
	cp	a, 56
	jr	z, BB0_34
	ld	a, (_isGame)
	jp	BB0_3
BB0_30:
	push	bc
	pop	hl
	ld	de, 117
	or	a, a
	sbc	hl, de
	jr	nz, BB0_34
	ld	de, (ix - 3)
	inc	de
	jr	BB0_28
BB0_32:
	call	_game_draw
	call	_gfx_SwapDraw
BB0_33:
	call	_os_GetCSC
	cp	a, 56
	jr	nz, BB0_33
	jr	BB0_35
BB0_34:
	xor	a, a
	ld	(_isGame), a
BB0_35:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_start_draw
_start_draw:
	call	_gfx_Begin
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 105
	push	hl
	ld	hl, 84
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 210
	push	hl
	ld	hl, 84
	push	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 230
	push	hl
	ld	hl, 135
	push	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_render
_render:
	call	__frameset0
	ld	iy, (ix + 6)
	lea	hl, iy
	dec	hl
	ld	de, 319
	or	a, a
	sbc	hl, de
	jr	nc, BB2_3
	ld	hl, (ix + 9)
	dec	hl
	ld	de, 239
	or	a, a
	sbc	hl, de
	jr	nc, BB2_3
	ld	hl, 50
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix + 12)
	ld	bc, 10
	call	__imulu
	push	hl
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	jr	BB2_4
BB2_3:
	ld	de, -960
	add	iy, de
	push	iy
	call	_gameOver
BB2_4:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_game_draw
_game_draw:
	ld	hl, -3
	call	__frameset
	ld	hl, -61
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	call	_rand
	ld	bc, 320
	call	__irems
	ld	(ix - 3), hl
	call	_rand
	ld	bc, 240
	call	__irems
	ld	de, 10
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_FillCircle
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	call	_gfx_SwapDraw
	ld	hl, 50
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 10
	push	hl
	push	hl
	ld	hl, 120
	push	hl
	ld	hl, 106
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_gameOver
_gameOver:
	call	__frameset0
	xor	a, a
	ld	iy, (_activeBuffer)
	ld	(iy), a
	lea	hl, iy
	inc	hl
	ld	bc, 153599
	ex	de, hl
	lea	hl, iy
	ldir
	ld	hl, _buffer1
	ld	(_activeBuffer), hl
	ld	(_isGame), a
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 105
	push	hl
	ld	hl, 160
	push	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 150
	push	hl
	ld	hl, 160
	push	hl
	ld	hl, _.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_PrintUInt
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_clearScreen
_clearScreen:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	(hl), 0
	push	hl
	pop	iy
	inc	iy
	ld	bc, 153599
	lea	de, iy
	ldir
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_isGame
_isGame:
	rb	1

	section	.data,"aw",@progbits
	public	_playerDirection
_playerDirection:
	db	114

	section	.bss,"aw",@nobits
	public	_buffer1
_buffer1:
	rb	153600

	section	.data,"aw",@progbits
	public	_activeBuffer
_activeBuffer:
	dl	_buffer1

	section	.bss,"aw",@nobits
	public	_buffer2
_buffer2:
	rb	153600

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"SNAKE.", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"Press any key to start...", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"BY Guyane", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"SCORE: ", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6c61664110f888c0285ae4c48b150c9a7a4361bb)"
	extern	_gfx_FillCircle
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_gfx_Begin
	extern	_rand
	extern	_os_ClrLCD
	extern	_os_DrawStatusBar
	extern	_gfx_SwapDraw
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_FillScreen
	extern	__irems
	extern	_gfx_FillRectangle
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_PrintUInt
	extern	_gfx_End
	extern	_os_GetCSC
	extern	_gfx_PrintStringXY
	extern	__frameset0
	extern	_time
	extern	_os_HomeUp
